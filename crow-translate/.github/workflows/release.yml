name: Release
on:
  release:
    types: [created]
jobs:
  Release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, windows-latest]
        arch: [amd64, aarch64, armv7]
        include:
          - os: ubuntu-18.04
            extra-cmake-arguments : >-
              -D CPACK_GENERATOR="External"
            upload-files: 'build/*.AppImage'
          - os: ubuntu-20.04
            extra-cmake-arguments : >-
              -D CPACK_GENERATOR="DEB;RPM"
            upload-files: 'build/*.deb;build/*.rpm'
          - os: windows-latest
            extra-cmake-arguments : >-
              -D WITH_PORTABLE_MODE=ON
              -D CPACK_GENERATOR="NSIS;7Z"
              -D CMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
              -D VCPKG_TARGET_TRIPLET=$env:RUNVCPKG_VCPKG_TRIPLET
              -D X_VCPKG_APPLOCAL_DEPS_INSTALL=ON
            upload-files: 'build/*.exe;build/*.7z'
        exclude:
          - os: windows-latest
            arch: aarch64
          - os: windows-latest
            arch: armv7
          - os: ubuntu-18.04
            arch: aarch64
          - os: ubuntu-18.04
            arch: armv7
    steps:
    - name: Clone repo
      uses: actions/checkout@v2.3.4

    - name: Install apt packages
      if: runner.os == 'Linux' && matrix.arch == 'amd64'
      run: |
        sudo apt-get update
        sudo apt-get install extra-cmake-modules libqt5x11extras5-dev qttools5-dev qtmultimedia5-dev libtesseract-dev rpm qt5-default qtgstreamer-plugins-qt5 gstreamer1.0-plugins-good gstreamer1.0-alsa gstreamer1.0-pulseaudio libqt5multimedia5-plugins qt5-style-plugins
        sudo apt-get remove qt5-gtk-platformtheme # Do not use libqgtk3.so because of https://bugreports.qt.io/browse/QTBUG-72506

    - name: Install linuxdeploy
      if: matrix.os == 'ubuntu-18.04'
      uses: miurahr/install-linuxdeploy-action@v1.5.0
      with:
        plugins: qt gstreamer

    # To set the application icon
    - name: Install icoutils
      if: runner.os == 'Windows'
      run: |
        $version = "0.32.3"
        $client = new-object System.Net.WebClient
        $client.DownloadFile("https://sourceforge.net/projects/unix-utils/files/icoutils/icoutils-$version-x86_64.zip/download", "icoutils.zip")
        7z x icoutils.zip
        echo "${{ github.workspace }}/icoutils-$version-x86_64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install vcpkg packages
      uses: lukka/run-vcpkg@v7
      if: runner.os == 'Windows'
      with:
        vcpkgArguments: tesseract[cpu-independed] ecm qt5-base qt5-svg qt5-multimedia qt5-winextras qt5-tools qt5-translations --triplet x64-windows
        vcpkgGitCommitId: 5568f110b509a9fd90711978a7cb76bae75bb092
      env:
        VCPKG_DISABLE_METRICS: 1

    - name: Build
      if: matrix.arch == 'amd64'
      run: |
        cmake -B build -D CMAKE_BUILD_TYPE=Release ${{ matrix.extra-cmake-arguments }}
        cmake --build build --target package --parallel 2 --config Release

    - name: Build in Ubuntu 20.04 Docker image
      uses: uraimo/run-on-arch-action@v2.0.9
      if: matrix.os == 'ubuntu-20.04' && matrix.arch != 'amd64'
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: --volume "${PWD}:/repo"
        install: |
          apt-get update -y
          apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget
          wget --no-check-certificate -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
          apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
          apt-get install -y libxcb1-dev extra-cmake-modules libqt5x11extras5-dev qttools5-dev qtmultimedia5-dev libtesseract-dev g++ git rpm cmake
        run: |
          cmake -S /repo -B /repo/build -D CMAKE_BUILD_TYPE=Release ${{ matrix.extra-cmake-arguments }}
          cmake --build /repo/build --target package --parallel 2

    - name: Upload
      uses: AButler/upload-release-assets@v2.0
      with:
        files: ${{ matrix.upload-files }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
